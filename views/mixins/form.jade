mixin tools(action, pageName)
  if action == 'edit'
    if hasFeature('bigToolsButtons')
      if pageName != 'home'
        form(action="/pages/#{pageName}", method="post", style="display:inline")
          input(type="hidden", name="_method", value="delete")
          input(type="submit", value="Delete this page").confirm-delete-page.btn.btn-danger
    else
      ul
        if pageName != 'home'
          li
            form(action="/pages/#{pageName}", method="post", style="display:inline")
              input(type="hidden", name="_method", value="delete")
              input(type="submit", value="Delete this page").confirm-delete-page.btn.btn-default

  if action == 'show'
    if hasFeature('bigToolsButtons')
      if !isAnonymous() && canEdit
        +anchor("/pages/" + pageName + "/edit")(role="button").btn.btn-primary
          i.icon.ion-compose
          span Edit this page
        +anchor("/wiki/" + pageName + "/history")(role="button").btn.btn-default
          i.icon.ion-clock
          span Page history
        +anchor("/wiki")(role="button").btn.btn-default
          i.icon.ion-grid
          span All pages
      if !isAnonymous()
          +anchor("/pages/new")(role="button").btn.btn-default
            i.icon.ion-plus-round
            span New page
      if canSearch()
          +anchor("/search")(role="button").btn.btn-default
            i.icon.ion-search
            span Search
    else
      ul
        if !isAnonymous()
          li
            +anchor("/pages/new")(title="Create new page").btn.btn-sm.btn-default
              i.icon.ion-plus-round
        if !isAnonymous() && canEdit
          li
            +anchor("/pages/" + pageName + "/edit")(title="Edit this page").btn.btn-sm.btn-default
              i.icon.ion-compose

        li
          +anchor("/wiki/" + pageName + "/history")(title="Page history").btn.btn-sm.btn-default
            i.icon.ion-clock
        li
          +anchor("/wiki")(title="All pages").btn.btn-sm.btn-default
            i.icon.ion-grid

        if canSearch()
          li
            +anchor("/search")(title="Search through the pages").btn.btn-sm.btn-default
              i.icon.ion-search

  if action == 'history'
    if hasFeature('bigToolsButtons')
      +anchor("/wiki")(role="button").btn.btn-default
        i.icon.ion-grid
        span All pages
    else
      ul
        li
          +anchor("/wiki")(title="All pages").btn.btn-sm.btn-default
            i.icon.ion-grid

mixin saveAndCancel(saveText)
  .well
    input(type='submit',value=saveText || 'Save').btn.btn-primary.disable-dirty-check
    |&nbsp;
    +anchor("/", "Cancel").btn.btn-default.disable-dirty-check

mixin errors(err)
  -var errors = locals.errors;
  - if (typeof(errors) != 'undefined' && Object.keys(errors).length > 0)
    .alert.bg-danger
      ul
        each v in errors
          li
            b= v.msg || v

mixin featuresStylesheets()
  // TODO Deprecated
  if hasFeature('markitup')
    +asset("/vendor/widearea/widearea.min.css")(type="text/css")
    +asset("/vendor/markitup/skins/simple/style.css")(type="text/css")
    +asset("/vendor/markitup/sets/markdown/style.css")(type="text/css")
  // TODO Deprecated
  if hasFeature('codemirror')
    +asset("/css/codemirror-ext.css")(type="text/css")
    +asset("/vendor/codemirror/codemirror.css")(type="text/css")
    +asset("/vendor/codemirror/fullscreen.css")(type="text/css")
  // TODO Use assets
  if hasFeature('bootstrapMarkdown')
    link(rel="stylesheet", type="text/css", href="/vendor/datatables/datatables.min.css")
    link(rel="stylesheet", type="text/css", href="/vendor/datatables/DataTables-1.10.10/css/dataTables.bootstrap.min.css")
    link(rel="stylesheet", type="text/css", href="/vendor/simplemde/simplemde.min.css")
mixin featuresJavaScripts()
  // TODO Deprecated
  if hasFeature('markitup')
    +asset("/vendor/jquery-migrate-1.1.0.min.js")
    +asset("/vendor/markitup/jquery.markitup.js")
    +asset("/vendor/markitup/sets/markdown/set.js")
    +asset("/vendor/widearea/widearea.min.js")
    script.
     $('#editor').markItUp(markdownSettings);
     wideArea();
  // TODO Deprecated
  if hasFeature('codemirror')
    +asset("/vendor/codemirror/codemirror.min.js")
    script.
      Jingo.cmInstance = CodeMirror.fromTextArea(document.getElementById("editor"), {
        lineNumbers: true,
        mode: 'gfm',
        matchBrackets: true,
        lineWrapping: true,
        extraKeys: {
          "Ctrl-Enter": function(cm) {
            Jingo.toggleFullscreen();
          }
        }
      });
      Jingo.toolbar();
  if hasFeature('bootstrapMarkdown')
    // TODO Use assets
    script(src="/vendor/datatables/datatables.min.js")
    script(src="/vendor/datatables/DataTables-1.10.10/js/dataTables.bootstrap.min.js")
    script(src="/vendor/datatables/DataTables-1.10.10/plugins/sorting/date-uk.js")
    script(src="/vendor/simplemde/simplemde.min.js")
    script(src="/vendor/jquery.hotkeys/jquery.hotkeys.js")
    script(src="/vendor/zeroclipboard/ZeroClipboard.js")
    script.
      Jingo.initSimplemde();
mixin warning()
  -var warning = locals.warning;
  - if (typeof(warning) != 'undefined')
    .alert.alert-block.alert-warning !{warning}

mixin notice()
  -var notice = locals.notice;
  - if (typeof(notice) != 'undefined')
    .alert.alert-block.alert-info.alert-dismissible !{notice}

mixin dialogBox(h)
  .modal-dialog
    .modal-content
      .modal-header
        button(data-dismiss="modal",aria-hidden="true").close &times;
        h3 #{h}
      .modal-body
      .modal-footer
